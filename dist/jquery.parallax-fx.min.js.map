{"version":3,"sources":["jquery.parallax-fx.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","$","Util","value","min","max","Math","ParallaxFx","$element","options","this","_getMergedOptions","offset","_init","css","concat","duration","newOffset","offsetScale","_this","_resetTimer","timer","setTimeout","delay","clearTimeout","extend","defaults","DATA_KEY","fn","parallaxFx","each","index","element","data","incOffset","execute"],"mappings":"AAAA,aAEA,SAASA,gBAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAEhH,SAASC,kBAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAE7S,SAASO,aAAad,EAAae,EAAYC,GAAmJ,OAAhID,GAAYb,kBAAkBF,EAAYiB,UAAWF,GAAiBC,GAAad,kBAAkBF,EAAagB,GAAqBhB,GAEzM,SAAWkB,GAGT,IAAIC,EACK,SAAeC,EAAOC,EAAKC,GAChC,OAAOC,KAAKF,IAAIE,KAAKD,IAAIF,EAAOC,GAAMC,IAItCE,EAEJ,WACE,SAASA,EAAWC,EAAUC,GAC5B5B,gBAAgB6B,KAAMH,GAEtBG,KAAKF,SAAWA,EAChBE,KAAKD,QAAUF,EAAWI,kBAAkBF,GAC5CC,KAAKE,OAAS,EAEdF,KAAKG,QA8CP,OA3CAhB,aAAaU,EAAY,CAAC,CACxBX,IAAK,QACLO,MAAO,WACLO,KAAKF,SAASM,IAAI,aAAc,aAAaC,OAAOL,KAAKD,QAAQO,SAAU,gBAE5E,CACDpB,IAAK,YACLO,MAAO,SAAmBA,GACxB,IAAIc,EAAYd,EAAQO,KAAKD,QAAQS,YACrCD,EAAYf,EAAWe,GAAY,IAAK,KACxCP,KAAKE,QAAUK,IAEhB,CACDrB,IAAK,UACLO,MAAO,WACL,IAAIgB,EAAQT,KAEZA,KAAKU,cAELV,KAAKW,MAAQC,WAAW,WACtBH,EAAMX,SAASM,IAAI,YAAa,kBAAkBC,OAAOI,EAAMP,OAAQ,YACtEF,KAAKD,QAAQc,SAEjB,CACD3B,IAAK,cACLO,MAAO,WACLO,KAAKW,OAASG,aAAad,KAAKW,SAEjC,CACDzB,IAAK,QACLO,MAAO,WACLO,KAAKU,cAELV,KAAKF,SAASM,IAAI,YAAa,wBAC/BJ,KAAKE,OAAS,KAEd,CAAC,CACHhB,IAAK,oBACLO,MAAO,SAA2BM,GAChC,OAAOR,EAAEwB,OAAO,GAAIlB,EAAWmB,SAAUjB,OAItCF,EAtDT,GAyDAA,EAAWmB,SAAW,CACpBR,YAAa,IACbF,SAAU,OACVO,MAAO,KA0CT,IAAII,EAAW,kBAEf1B,EAAE2B,GAAGC,WAAa,SAAUpB,GAC1B,OAAOC,KAAKoB,KAAK,SAAUC,EAAOC,GAChC,IAAIxB,EAAWP,EAAE+B,GACblD,EAAW0B,EAASyB,KAAKN,GAExB7C,EAKiB,iBAAX2B,GACT3B,EAASoD,UAAUzB,GACnB3B,EAASqD,WACkB,iBAAX1B,GAChB3B,EAAS2B,KARTD,EAASyB,KAAKN,EAAU7C,EAAW,IAAIyB,EAAWC,EAAUC,OAzHpE,CAuJGR","file":"jquery.parallax-fx.min.js","sourcesContent":["\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function ($) {\n  'use strict';\n\n  var Util = {\n    clamp: function clamp(value, min, max) {\n      return Math.min(Math.max(value, min), max);\n    }\n  };\n\n  var ParallaxFx =\n  /*#__PURE__*/\n  function () {\n    function ParallaxFx($element, options) {\n      _classCallCheck(this, ParallaxFx);\n\n      this.$element = $element;\n      this.options = ParallaxFx._getMergedOptions(options);\n      this.offset = 0;\n\n      this._init();\n    }\n\n    _createClass(ParallaxFx, [{\n      key: \"_init\",\n      value: function _init() {\n        this.$element.css('transition', \"transform \".concat(this.options.duration, \" ease-out\"));\n      }\n    }, {\n      key: \"incOffset\",\n      value: function incOffset(value) {\n        var newOffset = value * this.options.offsetScale;\n        newOffset = Util.clamp(newOffset, -100, 100);\n        this.offset -= newOffset;\n      }\n    }, {\n      key: \"execute\",\n      value: function execute() {\n        var _this = this;\n\n        this._resetTimer();\n\n        this.timer = setTimeout(function () {\n          _this.$element.css('transform', \"translate3d(0, \".concat(_this.offset, \"px, 0)\"));\n        }, this.options.delay);\n      }\n    }, {\n      key: \"_resetTimer\",\n      value: function _resetTimer() {\n        this.timer && clearTimeout(this.timer);\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this._resetTimer();\n\n        this.$element.css('transform', 'translate3d(0, 0, 0)');\n        this.offset = 0;\n      }\n    }], [{\n      key: \"_getMergedOptions\",\n      value: function _getMergedOptions(options) {\n        return $.extend({}, ParallaxFx.defaults, options);\n      }\n    }]);\n\n    return ParallaxFx;\n  }();\n\n  ParallaxFx.defaults = {\n    offsetScale: 0.06,\n    duration: '0.5s',\n    delay: 100\n  }; // class ParallaxFx {\n  //   constructor($element, options) {\n  //     this.$element = $element;\n  //     this.options = $.extend({}, ParallaxFx.defaults, options);\n  //     this.offset = 0;\n  //   }\n  //   init() {\n  //     this.$element.css(\n  //       'transition',\n  //       `transform ${this.options.duration} ease-out`\n  //     );\n  //   }\n  //   incOffset(value) {\n  //     let newOffset = value * this.options.scale;\n  //     newOffset = Util.clamp(newOffset, -100, 100);\n  //     this.offset -= newOffset;\n  //   }\n  //   execute() {\n  //     this._resetTimer();\n  //     this.timer = setTimeout(() => {\n  //       this.$element.css(\n  //         'transform',\n  //         `translate3d(0, ${this.offset}px, 0)`\n  //       );\n  //     }, this.options.delay);\n  //   }\n  //   _resetTimer() {\n  //     this.timer && clearTimeout(this.timer);\n  //   }\n  //   reset() {\n  //     this._resetTimer();\n  //     this.$element.css('transform', 'translate3d(0, 0, 0)');\n  //   }\n  // }\n  // ParallaxFx.defaults = {\n  //   scale: 0.06,\n  //   duration: '0.5s',\n  //   delay: 100,\n  // };\n  // export default ParallaxFx;\n\n  var DATA_KEY = 'rsh.parallax-fx';\n\n  $.fn.parallaxFx = function (options) {\n    return this.each(function (index, element) {\n      var $element = $(element);\n      var instance = $element.data(DATA_KEY);\n\n      if (!instance) {\n        $element.data(DATA_KEY, instance = new ParallaxFx($element, options));\n        return;\n      }\n\n      if (typeof options == 'number') {\n        instance.incOffset(options);\n        instance.execute();\n      } else if (typeof options == 'string') {\n        instance[options]();\n      }\n    });\n  }; // $.fn.parallaxFx = function (option) {\n  //   return this.each((index, element) => {\n  //     const $element = $(element);\n  //     let instance = $element.data(DATA_KEY);\n  //     if (!instance) {\n  //       $element.data(\n  //         DATA_KEY,\n  //         instance = new ParallaxFx($element)\n  //       );\n  //     }\n  //     if (typeof option == 'number') {\n  //       instance.incOffset(option);\n  //       instance.execute();\n  //     } else if (typeof option == 'string') {\n  //       instance[option]();\n  //     }\n  //   });\n  // };\n\n})($);\n//# sourceMappingURL=jquery.parallax-fx.js.map\n"]}